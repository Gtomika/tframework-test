plugins {
    id 'java-library'
    id 'maven-publish'
    id "com.diffplug.spotless" version "6.23.3"
    id "io.freefair.lombok" version "8.4"
    id 'me.qoomon.git-versioning' version "6.4.2"
}

group = 'com.github.Gtomika'
//git tag will be used as the version
version '0.0.0'

gitVersioning.apply {
    refs {
        //if there is a tag like '0.1.2' pointing to current commit, it will be used as version
        considerTagsOnBranches = true
        tag('(?<version>.*)') {
            version = '${ref.version}'
        }
        //otherwise, the branch name will be used to create a SNAPSHOT, such as 'master-SNAPSHOT'
        branch('.+') {
            version = '${ref}-SNAPSHOT'
        }
    }
}

ext {
    tfarmeworkCoreVersion = "0.1.0"
    slf4jVersion = "1.7.25"
    classGraphVersion = "4.8.165"
    junitJupiterVersion = "5.8.2"
    mockitoVersion = "5.8.0"
    log4jVersion = "2.17.2"
}

repositories {
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

dependencies {
    compileOnly "com.github.Gtomika:tframework-core:${tfarmeworkCoreVersion}" //user is expected to have this at runtime
    compileOnly "org.slf4j:slf4j-api:${slf4jVersion}" //tframework-core provides it at runtime
    compileOnly "io.github.classgraph:classgraph:${classGraphVersion}" //tframework-core provides it at runtime
    implementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testImplementation "com.github.Gtomika:tframework-core:${tfarmeworkCoreVersion}"
    testImplementation "io.github.classgraph:classgraph:${classGraphVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
}

java {
    withSourcesJar()
    withJavadocJar()
}

test {
    useJUnitPlatform()
}

spotless {
    format 'misc', {
        // define the files to apply `misc` to
        target '*.gradle', '*.md', '.gitignore'
        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
    java {
        importOrder()
        removeUnusedImports()
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
        licenseHeader '''/*
Copyright $YEAR Tamas Gaspar

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
'''
    }
}
